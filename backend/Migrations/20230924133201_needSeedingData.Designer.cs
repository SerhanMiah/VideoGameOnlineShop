// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGameAppBackend.Data;

#nullable disable

namespace VideoGameBackend.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20230924133201_needSeedingData")]
    partial class needSeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0e90aff9-c136-4230-b972-647fe23c8848",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "f6a354a0-387e-4709-9389-9e62f70e3dcf",
                            RoleId = "0e90aff9-c136-4230-b972-647fe23c8848"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AchievementsDb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DefaultBillingId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FavoriteGame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TotalGamesPlayed")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f6a354a0-387e-4709-9389-9e62f70e3dcf",
                            AccessFailedCount = 0,
                            AchievementsDb = "",
                            Address = "",
                            ConcurrencyStamp = "5aaf346c-33be-42f0-8932-cda549e82a98",
                            Email = "admin@videogameshop.com",
                            EmailConfirmed = true,
                            FirstName = "Admin",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@VIDEOGAMESHOP.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEMrJXlpffeU2LthfdOHs3keR5+S8L9of5uAbjPXcKQogPgIGM25JYvIH3mpCIgLWMw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3da75f75-ab71-4df3-a095-a48ab65bac21",
                            TotalGamesPlayed = 0,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "94cc09c2-7cb7-42fc-a3d4-0b9034febdc0",
                            AccessFailedCount = 0,
                            AchievementsDb = "",
                            Address = "",
                            ConcurrencyStamp = "4215e83d-3823-46e0-a47b-6f0f5b89c97d",
                            Email = "user@videogameshop.com",
                            EmailConfirmed = true,
                            FirstName = "Regular",
                            LastName = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@VIDEOGAMESHOP.COM",
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAIAAYagAAAAEE1AUf5lVhx5qSkkQdTRxVcUguZnQsVCOQ5n8T5x/7D5/r9SdyntlMhoFLZdCBRihw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e853ea0f-dee2-49cb-bf80-b2c3d8d18574",
                            TotalGamesPlayed = 0,
                            TwoFactorEnabled = false,
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeRatingId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Developer")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ESRBContentDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasMultiplayerSupport")
                        .HasColumnType("bit");

                    b.Property<string>("MinimumSystemRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfLocalPlayers")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Publisher")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RecommendedSystemRequirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TrailerUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgeRatingId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRatingId = 4,
                            AverageRating = 4.7999999999999998,
                            CoverImage = "https://media.thenerdstash.com/wp-content/uploads/2022/12/GOG-Winter-Sale.jpg.webp",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6561),
                            Description = "The Witcher 3: Wild Hunt is a role-playing game set in an open-world fantasy universe.",
                            Developer = "CD Projekt Red",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 7 or 8 (64-bit), Processor: Intel Core i5-2500K 3.3 GHz or AMD Phenom II X4 940, Memory: 6 GB RAM, Graphics: NVIDIA GeForce GTX 660 or AMD Radeon HD 7870, Storage: 35 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 29.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 or 8 (64-bit), Processor: Intel Core i7-3770 3.4 GHz or AMD FX-8350 4 GHz, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 770 or AMD Radeon R9 290, Storage: 35 GB available space",
                            ReleaseDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Witcher 3: Wild Hunt",
                            TrailerUrl = "https://www.youtube.com/watch?v=c0i88t0Kacs",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6564)
                        },
                        new
                        {
                            Id = 2,
                            AgeRatingId = 3,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://cdn.cloudflare.steamstatic.com/steam/apps/1174180/capsule_sm_120.jpg?t=1677747900",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6583),
                            Description = "Red Dead Redemption 2 is an epic tale of life in America's unforgiving heartland.",
                            Developer = "Rockstar Games",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel Core i5-2500K / AMD FX-6300, Memory: 8 GB RAM, Graphics: Nvidia GTX 770 2GB / AMD Radeon R9 280 3GB, Storage: 150 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4770K / AMD Ryzen 5 1500X, Memory: 12 GB RAM, Graphics: Nvidia GeForce GTX 1060 6GB / AMD Radeon RX 480 4GB, Storage: 150 GB available space",
                            ReleaseDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Red Dead Redemption 2",
                            TrailerUrl = "https://www.youtube.com/watch?v=eaW0tYpxyp0",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6584)
                        },
                        new
                        {
                            Id = 3,
                            AgeRatingId = 4,
                            AverageRating = 3.7000000000000002,
                            CoverImage = "https://example.com/cyberpunk2077coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6588),
                            Description = "Cyberpunk 2077 is an open-world action-adventure game set in a dystopian future.",
                            Developer = "CD Projekt Red",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 7 or 10, Processor: Intel Core i5-3570K / AMD FX-8310, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 780 / AMD Radeon RX 470, Storage: 70 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4790 / AMD Ryzen 3 3200G, Memory: 12 GB RAM, Graphics: NVIDIA GeForce GTX 1060 / AMD Radeon R9 Fury, Storage: 70 GB available space",
                            ReleaseDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cyberpunk 2077",
                            TrailerUrl = "https://www.youtube.com/watch?v=game3trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6588)
                        },
                        new
                        {
                            Id = 4,
                            AgeRatingId = 3,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/skyrimcoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6592),
                            Description = "The Elder Scrolls V: Skyrim is an open-world RPG known for its vast fantasy world.",
                            Developer = "Bethesda Game Studios",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel i5-750 / AMD Phenom II X4-945, Memory: 8 GB RAM, Graphics: NVIDIA GTX 470 / AMD HD 7870, Storage: 12 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 39.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 / 8.1 / 10, Processor: Intel i5-2400 / AMD FX-8320, Memory: 8 GB RAM, Graphics: NVIDIA GTX 780 / AMD Radeon R9 290, Storage: 12 GB available space",
                            ReleaseDate = new DateTime(2011, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Elder Scrolls V: Skyrim",
                            TrailerUrl = "https://www.youtube.com/watch?v=game4trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6592)
                        },
                        new
                        {
                            Id = 5,
                            AgeRatingId = 1,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/minecraftcoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6595),
                            Description = "Minecraft is a sandbox game where players can build and explore blocky worlds.",
                            Developer = "Mojang Studios",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7 or later, Processor: Intel Core i3-3210 / AMD A8-7600, Memory: 4 GB RAM, Graphics: NVIDIA GeForce 400 Series / AMD Radeon HD 7000 series, Storage: 4 GB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 29.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4690 / AMD A10-7800, Memory: 8 GB RAM, Graphics: NVIDIA GeForce 700 Series / AMD Radeon Rx 200 Series, Storage: 4 GB available space",
                            ReleaseDate = new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Minecraft",
                            TrailerUrl = "https://www.youtube.com/watch?v=game5trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6596)
                        },
                        new
                        {
                            Id = 6,
                            AgeRatingId = 4,
                            AverageRating = 4.5999999999999996,
                            CoverImage = "https://example.com/assassinscreedvalhallacoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6600),
                            Description = "Assassin's Creed Valhalla is an action RPG that lets you play as a Viking warrior in medieval England.",
                            Developer = "Ubisoft Montreal",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4460 / AMD Ryzen 3 1200, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 960 / AMD Radeon R9 380, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4790 / AMD Ryzen 5 1600, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 1060 / AMD Radeon RX 570, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Assassin's Creed Valhalla",
                            TrailerUrl = "https://www.youtube.com/watch?v=game6trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6600)
                        },
                        new
                        {
                            Id = 7,
                            AgeRatingId = 2,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/zeldabreathofthewildcoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6604),
                            Description = "The Legend of Zelda: Breath of the Wild is an action-adventure game set in the expansive world of Hyrule.",
                            Developer = "Nintendo",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Nintendo Switch",
                            NumberOfLocalPlayers = 1,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Nintendo Switch",
                            ReleaseDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Legend of Zelda: Breath of the Wild",
                            TrailerUrl = "https://www.youtube.com/watch?v=game7trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6604)
                        },
                        new
                        {
                            Id = 8,
                            AgeRatingId = 1,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/fifa22coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6608),
                            Description = "FIFA 22 is a sports simulation game that brings the excitement of football (soccer) to your gaming console.",
                            Developer = "EA Vancouver",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7/10 (64-bit), Processor: Intel Core i3-6100 / AMD Athlon X4 880K, Memory: 8 GB RAM, Graphics: NVIDIA GTX 660 / AMD Radeon HD 7850, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10 (64-bit), Processor: Intel i5-3550K / AMD FX 8150, Memory: 8 GB RAM, Graphics: NVIDIA GTX 670 / AMD Radeon R9 270X, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "FIFA 22",
                            TrailerUrl = "https://www.youtube.com/watch?v=game8trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6609)
                        },
                        new
                        {
                            Id = 9,
                            AgeRatingId = 3,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/horizonzerodawncoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6612),
                            Description = "Horizon Zero Dawn is an action RPG set in a post-apocalyptic world overrun by robotic creatures.",
                            Developer = "Guerrilla Games",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-2500K / AMD FX 6300, Memory: 8 GB RAM, Graphics: NVIDIA GTX 780 / AMD Radeon R9 290, Storage: 100 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 39.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4770K / AMD Ryzen 5 1500X, Memory: 16 GB RAM, Graphics: NVIDIA GTX 1060 / AMD RX 580, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2020, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Horizon Zero Dawn",
                            TrailerUrl = "https://www.youtube.com/watch?v=game9trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6612)
                        },
                        new
                        {
                            Id = 10,
                            AgeRatingId = 4,
                            AverageRating = 4.7999999999999998,
                            CoverImage = "https://example.com/doometernalcoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6618),
                            Description = "DOOM Eternal is a fast-paced first-person shooter where you battle hordes of demons from Hell.",
                            Developer = "id Software",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel Core i5-2500K / AMD Ryzen 3 2200G, Memory: 8 GB RAM, Graphics: NVIDIA GTX 670 / AMD Radeon HD 7870, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-6700K / AMD Ryzen 7 1800X, Memory: 16 GB RAM, Graphics: NVIDIA GTX 1080 / AMD Radeon RX 5700 XT, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "DOOM Eternal",
                            TrailerUrl = "https://www.youtube.com/watch?v=gFQpxbd9DBg",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6618)
                        },
                        new
                        {
                            Id = 11,
                            AgeRatingId = 1,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/amonguscoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6621),
                            Description = "Among Us is a multiplayer party game where players work together on a spaceship while trying to identify impostors.",
                            Developer = "InnerSloth",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7 SP1+ or macOS 10.13+, Processor: SSE2 instruction set support, Memory: 1 GB RAM, Graphics: DirectX 10 compatible, Storage: 250 MB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 4.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: SSE2 instruction set support, Memory: 4 GB RAM, Graphics: DirectX 10 compatible, Storage: 250 MB available space",
                            ReleaseDate = new DateTime(2018, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Among Us",
                            TrailerUrl = "https://www.youtube.com/watch?v=gFQpxbd9DBg",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6622)
                        },
                        new
                        {
                            Id = 12,
                            AgeRatingId = 4,
                            AverageRating = 4.5,
                            CoverImage = "https://example.com/cyberpunk2078coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6625),
                            Description = "Cyberpunk 2078 is a futuristic open-world RPG with advanced technology and immersive storytelling.",
                            Developer = "FutureTech Games",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-8700K / AMD Ryzen 7 3700X, Memory: 16 GB RAM, Graphics: NVIDIA GeForce RTX 3080 / AMD Radeon RX 6800 XT, Storage: 100 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 69.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i9-12900K / AMD Ryzen 9 5900X, Memory: 32 GB RAM, Graphics: NVIDIA GeForce RTX 3090 / AMD Radeon RX 6900 XT, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cyberpunk 2078",
                            TrailerUrl = "https://www.youtube.com/watch?v=game12trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6625)
                        },
                        new
                        {
                            Id = 13,
                            AgeRatingId = 2,
                            AverageRating = 4.7999999999999998,
                            CoverImage = "https://example.com/megaracingchampionshipcoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6629),
                            Description = "Mega Racing Championship is an adrenaline-pumping racing game with high-speed action and stunning graphics.",
                            Developer = "Speedster Studios",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel Core i5-6600K / AMD Ryzen 5 2600X, Memory: 8 GB RAM, Graphics: NVIDIA GTX 1060 / AMD RX 580, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 2,
                            Price = 29.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-9700K / AMD Ryzen 7 3700X, Memory: 16 GB RAM, Graphics: NVIDIA RTX 3070 / AMD RX 6700 XT, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2022, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mega Racing Championship",
                            TrailerUrl = "https://www.youtube.com/watch?v=game13trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6629)
                        },
                        new
                        {
                            Id = 14,
                            AgeRatingId = 3,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/bioshockinfinitecoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6632),
                            Description = "BioShock Infinite is a first-person shooter with a captivating narrative and breathtaking floating cityscapes.",
                            Developer = "Irrational Games",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows Vista, Processor: Intel Core 2 DUO 2.4 GHz / AMD Athlon X2 2.7 GHz, Memory: 2 GB RAM, Graphics: DirectX10 Compatible ATI Radeon HD 3870 / NVIDIA 8800 GT / Intel HD 3000 Integrated Graphics, Storage: 20 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 39.99m,
                            RecommendedSystemRequirements = "OS: Windows 7, Processor: Quad-core processor, Memory: 4 GB RAM, Graphics: DirectX11 Compatible, Storage: 30 GB available space",
                            ReleaseDate = new DateTime(2013, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "BioShock Infinite",
                            TrailerUrl = "https://www.youtube.com/watch?v=game14trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6632)
                        },
                        new
                        {
                            Id = 15,
                            AgeRatingId = 1,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/stardewvalleycoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(6674),
                            Description = "Stardew Valley is a charming farming simulation game where you can build the farm of your dreams.",
                            Developer = "ConcernedApe",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows Vista or greater, Processor: 2 GHz, Memory: 2 GB RAM, Graphics: 256 MB video memory, DirectX 10 compatible graphics card, Storage: 500 MB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 14.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 or greater, Processor: 2.8 GHz, Memory: 4 GB RAM, Graphics: 512 MB video memory, DirectX 10 compatible graphics card, Storage: 500 MB available space",
                            ReleaseDate = new DateTime(2016, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Stardew Valley",
                            TrailerUrl = "https://www.youtube.com/watch?v=game15trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7841)
                        },
                        new
                        {
                            Id = 16,
                            AgeRatingId = 4,
                            AverageRating = 0.0,
                            CoverImage = "https://example.com/elderscrollsvicoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7860),
                            Description = "The Elder Scrolls VI is an upcoming open-world RPG that takes players to a fantasy realm filled with magic and adventure.",
                            Developer = "Bethesda Game Studios",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-9600K / AMD Ryzen 5 3600, Memory: 16 GB RAM, Graphics: NVIDIA GeForce RTX 3060 / AMD Radeon RX 6600 XT, Storage: 100 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 69.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-12700K / AMD Ryzen 9 5900X, Memory: 32 GB RAM, Graphics: NVIDIA GeForce RTX 3080 / AMD Radeon RX 6800 XT, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Elder Scrolls VI",
                            TrailerUrl = "https://www.youtube.com/watch?v=game16trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7860)
                        },
                        new
                        {
                            Id = 17,
                            AgeRatingId = 1,
                            AverageRating = 4.7999999999999998,
                            CoverImage = "https://example.com/minecraftcoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7864),
                            Description = "Minecraft is a sandbox game that allows players to build and explore blocky worlds, limited only by their creativity.",
                            Developer = "Mojang Studios",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7 or later, Processor: Intel Core i3-3210 / AMD A8-7600 APU, Memory: 4 GB RAM, Graphics: Integrated: Intel HD Graphics 4000 (Ivy Bridge) or AMD Radeon R5 series (Kaveri line) with OpenGL 4.4*",
                            NumberOfLocalPlayers = 4,
                            Price = 26.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4690 / AMD A10-7800 APU, Memory: 8 GB RAM, Graphics: GeForce 700 Series or AMD Radeon Rx 200 Series (excluding integrated chipsets) with OpenGL 4.5",
                            ReleaseDate = new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Minecraft",
                            TrailerUrl = "https://www.youtube.com/watch?v=game17trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7865)
                        },
                        new
                        {
                            Id = 18,
                            AgeRatingId = 3,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/residentevilvillagecoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7879),
                            Description = "Resident Evil Village is a survival horror game that plunges players into a mysterious village filled with supernatural threats.",
                            Developer = "Capcom",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-7500 / AMD Ryzen 3 1200, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 1050 Ti / AMD Radeon RX 560, Storage: 45 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-8700 / AMD Ryzen 5 3600, Memory: 16 GB RAM, Graphics: NVIDIA GeForce GTX 1070 / AMD Radeon RX 5700, Storage: 45 GB available space",
                            ReleaseDate = new DateTime(2021, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Resident Evil Village",
                            TrailerUrl = "https://www.youtube.com/watch?v=game18trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7879)
                        },
                        new
                        {
                            Id = 19,
                            AgeRatingId = 3,
                            AverageRating = 4.5999999999999996,
                            CoverImage = "https://example.com/assassinscreedodysseycoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7882),
                            Description = "Assassin's Creed: Odyssey is an action RPG set in ancient Greece, where you embark on an epic journey as a mercenary.",
                            Developer = "Ubisoft",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 7 SP1 / 8.1 / 10, Processor: AMD FX 6300 @ 3.8 GHz / Intel Core i5 2400 @ 3.1 GHz, Memory: 8 GB RAM, Graphics: AMD Radeon R9 285 / NVIDIA GeForce GTX 660, Storage: 46 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 SP1 / 8.1 / 10, Processor: AMD Ryzen 1700X @ 3.8 GHz / Intel Core i7 7700 @ 4.2 GHz, Memory: 16 GB RAM, Graphics: AMD Vega 64 / NVIDIA GeForce GTX 970, Storage: 46 GB available space",
                            ReleaseDate = new DateTime(2018, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Assassin's Creed: Odyssey",
                            TrailerUrl = "https://www.youtube.com/watch?v=game19trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7883)
                        },
                        new
                        {
                            Id = 20,
                            AgeRatingId = 4,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/thelastofuspartiicoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7886),
                            Description = "The Last of Us Part II is a gripping action-adventure game that continues the story of Ellie in a post-apocalyptic world.",
                            Developer = "Naughty Dog",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-2300 / AMD FX-4320, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 760 / AMD Radeon HD 7870, Storage: 100 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4790 / AMD Ryzen 5 1600, Memory: 16 GB RAM, Graphics: NVIDIA GeForce GTX 1660 / AMD Radeon RX 580, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2020, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Last of Us Part II",
                            TrailerUrl = "https://www.youtube.com/watch?v=game20trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7886)
                        },
                        new
                        {
                            Id = 21,
                            AgeRatingId = 2,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/civilizationvicoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7890),
                            Description = "Civilization VI is a turn-based strategy game that allows you to build and lead your own civilization through the ages.",
                            Developer = "Firaxis Games",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7 64bit / 8.1 64bit / 10 64bit, Processor: Intel Core i3 2.5 Ghz or AMD Phenom II 2.6 Ghz or greater, Memory: 4 GB RAM, Graphics: 1 GB & AMD 5570 or nVidia 450, Storage: 12 GB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 39.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 64bit / 8.1 64bit / 10 64bit, Processor: Fourth generation Intel Core i5 2.5 Ghz or AMD FX8350 4.0 Ghz or greater, Memory: 8 GB RAM, Graphics: 2GB & AMD 7970 or nVidia 770 or greater, Storage: 12 GB available space",
                            ReleaseDate = new DateTime(2016, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Civilization VI",
                            TrailerUrl = "https://www.youtube.com/watch?v=game21trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7890)
                        },
                        new
                        {
                            Id = 22,
                            AgeRatingId = 4,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/haloinfinitecoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7894),
                            Description = "Halo Infinite is a first-person shooter that continues the legendary Halo series with a new chapter in Master Chief's story.",
                            Developer = "343 Industries",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: AMD Ryzen 5 2600X / Intel Core i5-3470, Memory: 8 GB RAM, Graphics: AMD Radeon RX 570 / NVIDIA GeForce GTX 770, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: AMD Ryzen 7 3700X / Intel Core i7-8700, Memory: 16 GB RAM, Graphics: AMD Radeon RX 5700 XT / NVIDIA GeForce RTX 2070, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Halo Infinite",
                            TrailerUrl = "https://www.youtube.com/watch?v=game22trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7894)
                        },
                        new
                        {
                            Id = 23,
                            AgeRatingId = 1,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/fifa24coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7897),
                            Description = "FIFA 24 is the latest installment of the popular soccer simulation game, featuring updated teams, stadiums, and gameplay.",
                            Developer = "EA Sports",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i3-2100 / AMD Phenom II X4 965, Memory: 8 GB RAM, Graphics: NVIDIA GTX 460 / AMD Radeon R7 260, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-3550 / AMD FX 8150, Memory: 16 GB RAM, Graphics: NVIDIA GTX 670 / AMD Radeon R9 270X, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "FIFA 24",
                            TrailerUrl = "https://www.youtube.com/watch?v=game23trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7898)
                        },
                        new
                        {
                            Id = 24,
                            AgeRatingId = 4,
                            AverageRating = 4.7999999999999998,
                            CoverImage = "https://example.com/horizonzerodawncoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7901),
                            Description = "Horizon: Zero Dawn is an action RPG set in a post-apocalyptic world inhabited by robotic creatures, offering an engaging storyline.",
                            Developer = "Guerrilla Games",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-2500K / AMD FX 6300, Memory: 8 GB RAM, Graphics: NVIDIA GTX 780 / AMD Radeon R9 290, Storage: 100 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 39.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4770K / AMD Ryzen 5 1500X, Memory: 16 GB RAM, Graphics: NVIDIA GTX 1060 / AMD RX 580, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2020, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Horizon: Zero Dawn",
                            TrailerUrl = "https://www.youtube.com/watch?v=game24trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7901)
                        },
                        new
                        {
                            Id = 25,
                            AgeRatingId = 4,
                            AverageRating = 4.5,
                            CoverImage = "https://example.com/cyberpunk2078coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7905),
                            Description = "Cyberpunk 2078 is a futuristic open-world RPG set in a cyber-enhanced world where you play as a mercenary navigating the city of Night City.",
                            Developer = "CD Projekt Red",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4670K / AMD Ryzen 5 3600, Memory: 12 GB RAM, Graphics: NVIDIA GeForce GTX 1660 / AMD Radeon RX 5600 XT, Storage: 70 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-7700K / AMD Ryzen 7 3700X, Memory: 16 GB RAM, Graphics: NVIDIA GeForce RTX 3070 / AMD Radeon RX 6800 XT, Storage: 70 GB available space",
                            ReleaseDate = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Cyberpunk 2078",
                            TrailerUrl = "https://www.youtube.com/watch?v=game25trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7905)
                        },
                        new
                        {
                            Id = 26,
                            AgeRatingId = 1,
                            AverageRating = 0.0,
                            CoverImage = "https://example.com/zeldabreathofthewild2coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7909),
                            Description = "The Legend of Zelda: Breath of the Wild 2 is the highly anticipated sequel to the acclaimed action-adventure game, offering new adventures in the kingdom of Hyrule.",
                            Developer = "Nintendo",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Nintendo Switch",
                            NumberOfLocalPlayers = 1,
                            Price = 49.99m,
                            RecommendedSystemRequirements = "OS: Nintendo Switch",
                            ReleaseDate = new DateTime(2023, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Legend of Zelda: Breath of the Wild 2",
                            TrailerUrl = "https://www.youtube.com/watch?v=game26trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7909)
                        },
                        new
                        {
                            Id = 27,
                            AgeRatingId = 1,
                            AverageRating = 4.9000000000000004,
                            CoverImage = "https://example.com/stardewvalleycoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7912),
                            Description = "Stardew Valley is a farming simulation game that allows players to build and customize their own farm, interact with villagers, and enjoy rural life.",
                            Developer = "ConcernedApe",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows Vista or greater, Processor: 2 GHz, Memory: 2 GB RAM, Graphics: 256 MB video memory, DirectX 10, Storage: 500 MB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 14.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 or greater, Processor: 2.8 GHz, Memory: 4 GB RAM, Graphics: 512 MB video memory, DirectX 10, Storage: 500 MB available space",
                            ReleaseDate = new DateTime(2016, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Stardew Valley",
                            TrailerUrl = "https://www.youtube.com/watch?v=game27trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7912)
                        },
                        new
                        {
                            Id = 28,
                            AgeRatingId = 1,
                            AverageRating = 4.7000000000000002,
                            CoverImage = "https://example.com/minecraftdungeonscoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7916),
                            Description = "Minecraft: Dungeons is an action-adventure game set in the blocky world of Minecraft, featuring dungeon crawling and exploration.",
                            Developer = "Mojang Studios",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 7 or higher, Processor: 2.8 GHz Core i3, Memory: 2 GB RAM, Graphics: Intel HD 4000, DirectX 11 compatible, Storage: 6 GB available space",
                            NumberOfLocalPlayers = 4,
                            Price = 29.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: 3.3 GHz Core i5, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 660 / AMD Radeon HD 7850, DirectX 11 compatible, Storage: 6 GB available space",
                            ReleaseDate = new DateTime(2020, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Minecraft: Dungeons",
                            TrailerUrl = "https://www.youtube.com/watch?v=game28trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7916)
                        },
                        new
                        {
                            Id = 29,
                            AgeRatingId = 3,
                            AverageRating = 0.0,
                            CoverImage = "https://example.com/overwatch2coverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7919),
                            Description = "Overwatch 2 is a team-based first-person shooter with an engaging story, new heroes, and updated gameplay mechanics.",
                            Developer = "Blizzard Entertainment",
                            HasMultiplayerSupport = true,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 960 / AMD Radeon R9 280X, Storage: 50 GB available space",
                            NumberOfLocalPlayers = 6,
                            Price = 59.99m,
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7, Memory: 16 GB RAM, Graphics: NVIDIA GeForce GTX 1660 / AMD Radeon RX 5700, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2023, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Overwatch 2",
                            TrailerUrl = "https://www.youtube.com/watch?v=game29trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7919)
                        },
                        new
                        {
                            Id = 30,
                            AgeRatingId = 2,
                            AverageRating = 4.7999999999999998,
                            CoverImage = "https://example.com/subnauticacoverimage.jpg",
                            CreatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7923),
                            Description = "Subnautica is an underwater adventure game where you explore an alien ocean, craft equipment, and survive in a hostile environment.",
                            Developer = "Unknown Worlds Entertainment",
                            HasMultiplayerSupport = false,
                            MinimumSystemRequirements = "OS: Windows Vista SP2, Processor: Intel Haswell 2 cores / 4 threads @ 2.5 GHz, Memory: 4 GB RAM, Graphics: Intel HD 4600, DirectX 11 compatible, Storage: 20 GB available space",
                            NumberOfLocalPlayers = 1,
                            Price = 24.99m,
                            RecommendedSystemRequirements = "OS: Windows 7 SP1, Processor: Intel Haswell 4 cores / 4 threads @ 3.2 GHz, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 550 Ti / AMD Radeon HD 7850, DirectX 11 compatible, Storage: 20 GB available space",
                            ReleaseDate = new DateTime(2018, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Subnautica",
                            TrailerUrl = "https://www.youtube.com/watch?v=game30trailerurl",
                            UpdatedAt = new DateTime(2023, 9, 24, 13, 32, 0, 530, DateTimeKind.Utc).AddTicks(7923)
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.GameImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GameId = 1,
                            Url = "https://i.guim.co.uk/img/static/sys-images/Guardian/Pix/pictures/2015/5/13/1431520130189/8bfad8ae-5a24-4617-988e-ccafee83324f-1020x612.jpeg?width=700&quality=85&auto=format&fit=max&s=8a7d3e78ea1329d9442f2b175bc7eb14"
                        },
                        new
                        {
                            Id = 2,
                            GameId = 1,
                            Url = "https://s1.dmcdn.net/v/7dQua1X-34xfWvryS/x1080"
                        },
                        new
                        {
                            Id = 3,
                            GameId = 1,
                            Url = "https://venturebeat.com/wp-content/uploads/2022/12/witcher-5.jpg?w=791&resize=1200%2C910&strip=all"
                        },
                        new
                        {
                            Id = 4,
                            GameId = 1,
                            Url = "https://media.thenerdstash.com/wp-content/uploads/2022/12/GOG-Winter-Sale.jpg.webp"
                        },
                        new
                        {
                            Id = 5,
                            GameId = 1,
                            Url = "https://assetsio.reedpopcdn.com/Site_qTBBJD0.jpg?width=1600&height=900&fit=crop&quality=100&format=png&enable=upscale&auto=webp"
                        },
                        new
                        {
                            Id = 6,
                            GameId = 2,
                            Url = "https://link-to-first-image-for-RDR2.com"
                        },
                        new
                        {
                            Id = 7,
                            GameId = 2,
                            Url = "https://link-to-second-image-for-RDR2.com"
                        },
                        new
                        {
                            Id = 8,
                            GameId = 2,
                            Url = "https://link-to-third-image-for-RDR2.com"
                        },
                        new
                        {
                            Id = 9,
                            GameId = 2,
                            Url = "https://link-to-four-image-for-RDR2.com"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("BillingId")
                        .HasColumnType("int");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("BillingId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BillingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardLastFourDigits")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int?>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BillingId");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payments.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payments.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("GameId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.AgeRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgeRatings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = "E - Everyone"
                        },
                        new
                        {
                            Id = 2,
                            Rating = "E10+ - Everyone 10 and older"
                        },
                        new
                        {
                            Id = 3,
                            Rating = "T - Teen"
                        },
                        new
                        {
                            Id = 4,
                            Rating = "M - Mature"
                        },
                        new
                        {
                            Id = 5,
                            Rating = "AO - Adults Only"
                        },
                        new
                        {
                            Id = 6,
                            Rating = "RP - Rating Pending"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.DLC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AverageRating")
                        .HasColumnType("float");

                    b.Property<string>("DLCName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DiscountedPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int?>("MainDLCImageId")
                        .HasColumnType("int");

                    b.Property<string>("MinimumSystemRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecommendedSystemRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrailerUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("MainDLCImageId");

                    b.ToTable("DLCs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageRating = 4.7999999999999998,
                            DLCName = "The Witcher 3: Hearts of Stone",
                            Description = "Embark on a new adventure as Geralt of Rivia in the Hearts of Stone expansion.",
                            Developer = "CD Projekt",
                            GameId = 1,
                            MinimumSystemRequirements = "OS: 64-bit Windows 7, CPU: Intel CPU Core i5-2500K 3.3GHz, RAM: 6GB, Graphics: Nvidia GPU GeForce GTX 660 / AMD GPU Radeon HD 7870",
                            Price = 9.99m,
                            Publisher = "CD Projekt",
                            RecommendedSystemRequirements = "OS: 64-bit Windows 7, CPU: Intel CPU Core i7 3770 3.4 GHz, RAM: 8GB, Graphics: Nvidia GPU GeForce GTX 770 / AMD GPU Radeon R9 290",
                            ReleaseDate = new DateTime(2015, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=ffdxS9R6NTE"
                        },
                        new
                        {
                            Id = 2,
                            AverageRating = 4.7000000000000002,
                            DLCName = "Red Dead Redemption 2: Outlaws to the End",
                            Description = "Join a gang of outlaws and experience new missions and adventures in the Outlaws to the End DLC.",
                            Developer = "Rockstar Games",
                            GameId = 2,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel Core i5-2500K / AMD FX-6300, Memory: 8 GB RAM, Graphics: Nvidia GTX 770 2GB / AMD Radeon R9 280 3GB, Storage: 150 GB available space",
                            Price = 19.99m,
                            Publisher = "Rockstar Games",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4770K / AMD Ryzen 5 1500X, Memory: 12 GB RAM, Graphics: Nvidia GeForce GTX 1060 6GB / AMD Radeon RX 480 4GB, Storage: 150 GB available space",
                            ReleaseDate = new DateTime(2019, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 31,
                            AverageRating = 0.0,
                            DLCName = "Cyberpunk 2077 - Night City Chronicles",
                            Description = "Experience new adventures in Night City with the Night City Chronicles DLC for Cyberpunk 2077, including new storylines, characters, and weapons.",
                            Developer = "CD Projekt Red",
                            GameId = 3,
                            MinimumSystemRequirements = "OS: Windows 7 or 10, Processor: Intel Core i5-3570K / AMD FX-8310, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 780 / AMD Radeon RX 470, Storage: 70 GB available space",
                            Price = 19.99m,
                            Publisher = "CD Projekt",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4790 / AMD Ryzen 3 3200G, Memory: 12 GB RAM, Graphics: NVIDIA GeForce GTX 1060 / AMD Radeon R9 Fury, Storage: 70 GB available space",
                            ReleaseDate = new DateTime(2021, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 4,
                            AverageRating = 0.0,
                            DLCName = "The Elder Scrolls V: Skyrim - Dawnguard",
                            Description = "Embark on a new questline with the Dawnguard DLC for The Elder Scrolls V: Skyrim, featuring vampires, vampire hunters, and powerful artifacts.",
                            Developer = "Bethesda Game Studios",
                            GameId = 4,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel i5-750 / AMD Phenom II X4-945, Memory: 8 GB RAM, Graphics: NVIDIA GTX 470 / AMD HD 7870, Storage: 12 GB available space",
                            Price = 19.99m,
                            Publisher = "Bethesda Softworks",
                            RecommendedSystemRequirements = "OS: Windows 7 / 8.1 / 10, Processor: Intel i5-2400 / AMD FX-8320, Memory: 8 GB RAM, Graphics: NVIDIA GTX 780 / AMD Radeon R9 290, Storage: 12 GB available space",
                            ReleaseDate = new DateTime(2012, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 5,
                            AverageRating = 0.0,
                            DLCName = "Minecraft - Explorers Pack",
                            Description = "Expand your blocky adventures with the Explorers Pack DLC for Minecraft, including new biomes, creatures, and building materials.",
                            Developer = "Mojang Studios",
                            GameId = 5,
                            MinimumSystemRequirements = "OS: Windows 7 or later, Processor: Intel Core i3-3210 / AMD A8-7600, Memory: 4 GB RAM, Graphics: NVIDIA GeForce 400 Series / AMD Radeon HD 7000 series, Storage: 4 GB available space",
                            Price = 9.99m,
                            Publisher = "Mojang Studios",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4690 / AMD A10-7800, Memory: 8 GB RAM, Graphics: NVIDIA GeForce 700 Series / AMD Radeon Rx 200 Series, Storage: 4 GB available space",
                            ReleaseDate = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 6,
                            AverageRating = 0.0,
                            DLCName = "Assassin's Creed Valhalla - Wrath of the Norsemen",
                            Description = "Expand your Viking saga with the Wrath of the Norsemen DLC for Assassin's Creed Valhalla, featuring new quests, weapons, and armor.",
                            Developer = "Ubisoft Montreal",
                            GameId = 6,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4460 / AMD Ryzen 3 1200, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 960 / AMD Radeon R9 380, Storage: 50 GB available space",
                            Price = 19.99m,
                            Publisher = "Ubisoft",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4790 / AMD Ryzen 5 1600, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 1060 / AMD Radeon RX 570, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2021, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 7,
                            AverageRating = 0.0,
                            DLCName = "The Legend of Zelda: Breath of the Wild - Master Trials",
                            Description = "Embark on the Master Trials in this DLC for The Legend of Zelda: Breath of the Wild, featuring new challenges, items, and a new Master Mode.",
                            Developer = "Nintendo",
                            GameId = 7,
                            MinimumSystemRequirements = "OS: Nintendo Switch",
                            Price = 19.99m,
                            Publisher = "Nintendo",
                            RecommendedSystemRequirements = "OS: Nintendo Switch",
                            ReleaseDate = new DateTime(2017, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 8,
                            AverageRating = 0.0,
                            DLCName = "FIFA 22 - Ultimate Team Expansion",
                            Description = "Enhance your FIFA 22 experience with the Ultimate Team Expansion DLC, featuring new player cards, stadiums, and challenges.",
                            Developer = "EA Vancouver",
                            GameId = 8,
                            MinimumSystemRequirements = "OS: Windows 7/10 (64-bit), Processor: Intel Core i3-6100 / AMD Athlon X4 880K, Memory: 8 GB RAM, Graphics: NVIDIA GTX 660 / AMD Radeon HD 7850, Storage: 50 GB available space",
                            Price = 14.99m,
                            Publisher = "Electronic Arts",
                            RecommendedSystemRequirements = "OS: Windows 10 (64-bit), Processor: Intel i5-3550K / AMD FX 8150, Memory: 8 GB RAM, Graphics: NVIDIA GTX 670 / AMD Radeon R9 270X, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2021, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 9,
                            AverageRating = 0.0,
                            DLCName = "Horizon Zero Dawn - Frozen Wilds Expansion",
                            Description = "Venture into the icy wilderness with the Frozen Wilds Expansion DLC for Horizon Zero Dawn, featuring new quests, creatures, and gear.",
                            Developer = "Guerrilla Games",
                            GameId = 9,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-2500K / AMD FX 6300, Memory: 8 GB RAM, Graphics: NVIDIA GTX 780 / AMD Radeon R9 290, Storage: 100 GB available space",
                            Price = 14.99m,
                            Publisher = "Sony Interactive Entertainment",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4770K / AMD Ryzen 5 1500X, Memory: 16 GB RAM, Graphics: NVIDIA GTX 1060 / AMD RX 580, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 10,
                            AverageRating = 0.0,
                            DLCName = "DOOM Eternal - Inferno's Fury Expansion",
                            Description = "Unleash the fury of Hell with new weapons and challenges in the Inferno's Fury Expansion for DOOM Eternal.",
                            Developer = "id Software",
                            GameId = 10,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel Core i5-2500K / AMD Ryzen 3 2200G, Memory: 8 GB RAM, Graphics: NVIDIA GTX 670 / AMD Radeon HD 7870, Storage: 50 GB available space",
                            Price = 19.99m,
                            Publisher = "Bethesda Softworks",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-6700K / AMD Ryzen 7 1800X, Memory: 16 GB RAM, Graphics: NVIDIA GTX 1080 / AMD Radeon RX 5700 XT, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 11,
                            AverageRating = 0.0,
                            DLCName = "Among Us - Galactic Adventures Pack",
                            Description = "Embark on new adventures in space with the Galactic Adventures Pack for Among Us, featuring new maps and roles.",
                            Developer = "InnerSloth",
                            GameId = 11,
                            MinimumSystemRequirements = "OS: Windows 7 SP1+ or macOS 10.13+, Processor: SSE2 instruction set support, Memory: 1 GB RAM, Graphics: DirectX 10 compatible, Storage: 250 MB available space",
                            Price = 9.99m,
                            Publisher = "InnerSloth",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: SSE2 instruction set support, Memory: 4 GB RAM, Graphics: DirectX 10 compatible, Storage: 250 MB available space",
                            ReleaseDate = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 12,
                            AverageRating = 0.0,
                            DLCName = "Cyberpunk 2078 - Night City Chronicles",
                            Description = "Dive deeper into the mysteries of Night City with new stories, characters, and cyber-enhancements in the Night City Chronicles DLC for Cyberpunk 2078.",
                            Developer = "FutureTech Games",
                            GameId = 12,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-8700K / AMD Ryzen 7 3700X, Memory: 16 GB RAM, Graphics: NVIDIA GeForce RTX 3080 / AMD Radeon RX 6800 XT, Storage: 100 GB available space",
                            Price = 24.99m,
                            Publisher = "FutureTech Games",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i9-12900K / AMD Ryzen 9 5900X, Memory: 32 GB RAM, Graphics: NVIDIA GeForce RTX 3090 / AMD Radeon RX 6900 XT, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 13,
                            AverageRating = 0.0,
                            DLCName = "Mega Racing Championship - Turbo Boost Pack",
                            Description = "Rev up your engines with the Turbo Boost Pack for Mega Racing Championship, featuring new vehicles and high-speed tracks.",
                            Developer = "Speedster Studios",
                            GameId = 13,
                            MinimumSystemRequirements = "OS: Windows 7, Processor: Intel Core i5-6600K / AMD Ryzen 5 2600X, Memory: 8 GB RAM, Graphics: NVIDIA GTX 1060 / AMD RX 580, Storage: 50 GB available space",
                            Price = 9.99m,
                            Publisher = "Speedster Studios",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-9700K / AMD Ryzen 7 3700X, Memory: 16 GB RAM, Graphics: NVIDIA RTX 3070 / AMD RX 6700 XT, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2022, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 14,
                            AverageRating = 0.0,
                            DLCName = "BioShock Infinite - Clash in the Clouds",
                            Description = "Take on challenging arena battles in the Clash in the Clouds DLC for BioShock Infinite, featuring new maps, enemies, and rewards.",
                            Developer = "Irrational Games",
                            GameId = 14,
                            MinimumSystemRequirements = "OS: Windows Vista, Processor: Intel Core 2 DUO 2.4 GHz / AMD Athlon X2 2.7 GHz, Memory: 2 GB RAM, Graphics: DirectX10 Compatible ATI Radeon HD 3870 / NVIDIA 8800 GT / Intel HD 3000 Integrated Graphics, Storage: 20 GB available space",
                            Price = 9.99m,
                            Publisher = "2K Games",
                            RecommendedSystemRequirements = "OS: Windows 7, Processor: Quad-core processor, Memory: 4 GB RAM, Graphics: DirectX11 Compatible, Storage: 30 GB available space",
                            ReleaseDate = new DateTime(2013, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 15,
                            AverageRating = 0.0,
                            DLCName = "Stardew Valley - Greenhouse Expansion",
                            Description = "Expand your farming capabilities with the Greenhouse Expansion DLC for Stardew Valley, allowing year-round crop growth.",
                            Developer = "ConcernedApe",
                            GameId = 15,
                            MinimumSystemRequirements = "OS: Windows Vista or greater, Processor: 2 GHz, Memory: 2 GB RAM, Graphics: 256 MB video memory, DirectX 10 compatible graphics card, Storage: 500 MB available space",
                            Price = 4.99m,
                            Publisher = "ConcernedApe",
                            RecommendedSystemRequirements = "OS: Windows 7 or greater, Processor: 2.8 GHz, Memory: 4 GB RAM, Graphics: 512 MB video memory, DirectX 10 compatible graphics card, Storage: 500 MB available space",
                            ReleaseDate = new DateTime(2017, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 16,
                            AverageRating = 0.0,
                            DLCName = "The Elder Scrolls VI - Knights of Tamriel Expansion",
                            Description = "Embark on a quest to join the legendary Knights of Tamriel in this expansion for The Elder Scrolls VI, introducing new lands, quests, and foes.",
                            Developer = "Bethesda Game Studios",
                            GameId = 16,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-9600K / AMD Ryzen 5 3600, Memory: 16 GB RAM, Graphics: NVIDIA GeForce RTX 3060 / AMD Radeon RX 6600 XT, Storage: 100 GB available space",
                            Price = 29.99m,
                            Publisher = "Bethesda Softworks",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-12700K / AMD Ryzen 9 5900X, Memory: 32 GB RAM, Graphics: NVIDIA GeForce RTX 3080 / AMD Radeon RX 6800 XT, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 17,
                            AverageRating = 0.0,
                            DLCName = "Minecraft - Nether Update",
                            Description = "Explore the treacherous Nether dimension with the Nether Update DLC for Minecraft, featuring new biomes, mobs, and resources.",
                            Developer = "Mojang Studios",
                            GameId = 17,
                            MinimumSystemRequirements = "OS: Windows 7 or later, Processor: Intel Core i3-3210 / AMD A8-7600 APU, Memory: 4 GB RAM, Graphics: Integrated: Intel HD Graphics 4000 (Ivy Bridge) or AMD Radeon R5 series (Kaveri line) with OpenGL 4.4*",
                            Price = 9.99m,
                            Publisher = "Mojang Studios",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4690 / AMD A10-7800 APU, Memory: 8 GB RAM, Graphics: GeForce 700 Series or AMD Radeon Rx 200 Series (excluding integrated chipsets) with OpenGL 4.5",
                            ReleaseDate = new DateTime(2021, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 18,
                            AverageRating = 0.0,
                            DLCName = "Resident Evil Village - Nightmares Unleashed",
                            Description = "Survive new horrors in the Nightmares Unleashed DLC for Resident Evil Village, featuring additional story content, enemies, and challenges.",
                            Developer = "Capcom",
                            GameId = 18,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-7500 / AMD Ryzen 3 1200, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 1050 Ti / AMD Radeon RX 560, Storage: 45 GB available space",
                            Price = 14.99m,
                            Publisher = "Capcom",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-8700 / AMD Ryzen 5 3600, Memory: 16 GB RAM, Graphics: NVIDIA GeForce GTX 1070 / AMD Radeon RX 5700, Storage: 45 GB available space",
                            ReleaseDate = new DateTime(2022, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 19,
                            AverageRating = 0.0,
                            DLCName = "Assassin's Creed: Odyssey - Legacy of the First Blade",
                            Description = "Uncover the secrets of the first Assassins in the Legacy of the First Blade DLC for Assassin's Creed: Odyssey, featuring new storylines and abilities.",
                            Developer = "Ubisoft",
                            GameId = 19,
                            MinimumSystemRequirements = "OS: Windows 7 SP1 / 8.1 / 10, Processor: AMD FX 6300 @ 3.8 GHz / Intel Core i5 2400 @ 3.1 GHz, Memory: 8 GB RAM, Graphics: AMD Radeon R9 285 / NVIDIA GeForce GTX 660, Storage: 46 GB available space",
                            Price = 19.99m,
                            Publisher = "Ubisoft",
                            RecommendedSystemRequirements = "OS: Windows 7 SP1 / 8.1 / 10, Processor: AMD Ryzen 1700X @ 3.8 GHz / Intel Core i7 7700 @ 4.2 GHz, Memory: 16 GB RAM, Graphics: AMD Vega 64 / NVIDIA GeForce GTX 970, Storage: 46 GB available space",
                            ReleaseDate = new DateTime(2019, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 20,
                            AverageRating = 0.0,
                            DLCName = "The Last of Us Part II - Left Behind Epilogue",
                            Description = "Explore the untold story of Ellie and Riley in the Left Behind Epilogue DLC for The Last of Us Part II, featuring new characters and challenges.",
                            Developer = "Naughty Dog",
                            GameId = 20,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-2300 / AMD FX-4320, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 760 / AMD Radeon HD 7870, Storage: 100 GB available space",
                            Price = 9.99m,
                            Publisher = "Sony Interactive Entertainment",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4790 / AMD Ryzen 5 1600, Memory: 16 GB RAM, Graphics: NVIDIA GeForce GTX 1660 / AMD Radeon RX 580, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2021, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 21,
                            AverageRating = 0.0,
                            DLCName = "Civilization VI - Rise and Fall Expansion",
                            Description = "Expand your empire with the Rise and Fall expansion for Civilization VI, introducing new civilizations, leaders, and gameplay features.",
                            Developer = "Firaxis Games",
                            GameId = 21,
                            MinimumSystemRequirements = "OS: Windows 7 64bit / 8.1 64bit / 10 64bit, Processor: Intel Core i3 2.5 Ghz or AMD Phenom II 2.6 Ghz or greater, Memory: 4 GB RAM, Graphics: 1 GB & AMD 5570 or nVidia 450, Storage: 12 GB available space",
                            Price = 29.99m,
                            Publisher = "2K Games",
                            RecommendedSystemRequirements = "OS: Windows 7 64bit / 8.1 64bit / 10 64bit, Processor: Fourth generation Intel Core i5 2.5 Ghz or AMD FX8350 4.0 Ghz or greater, Memory: 8 GB RAM, Graphics: 2GB & AMD 7970 or nVidia 770 or greater, Storage: 12 GB available space",
                            ReleaseDate = new DateTime(2018, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 22,
                            AverageRating = 0.0,
                            DLCName = "Halo Infinite - Spartan Ops Expansion",
                            Description = "Continue the adventure in the Halo universe with the Spartan Ops Expansion for Halo Infinite, featuring new missions, weapons, and multiplayer maps.",
                            Developer = "343 Industries",
                            GameId = 22,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: AMD Ryzen 5 2600X / Intel Core i5-3470, Memory: 8 GB RAM, Graphics: AMD Radeon RX 570 / NVIDIA GeForce GTX 770, Storage: 50 GB available space",
                            Price = 19.99m,
                            Publisher = "Xbox Game Studios",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: AMD Ryzen 7 3700X / Intel Core i7-8700, Memory: 16 GB RAM, Graphics: AMD Radeon RX 5700 XT / NVIDIA GeForce RTX 2070, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2022, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 23,
                            AverageRating = 0.0,
                            DLCName = "FIFA 24 - World Cup Expansion",
                            Description = "Experience the excitement of the World Cup with the World Cup Expansion for FIFA 24, featuring updated teams, stadiums, and tournament modes.",
                            Developer = "EA Sports",
                            GameId = 23,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i3-2100 / AMD Phenom II X4 965, Memory: 8 GB RAM, Graphics: NVIDIA GTX 460 / AMD Radeon R7 260, Storage: 50 GB available space",
                            Price = 14.99m,
                            Publisher = "Electronic Arts",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-3550 / AMD FX 8150, Memory: 16 GB RAM, Graphics: NVIDIA GTX 670 / AMD Radeon R9 270X, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2023, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 24,
                            AverageRating = 0.0,
                            DLCName = "Horizon: Zero Dawn - Frozen Wilds Expansion",
                            Description = "Embark on a new journey in the Frozen Wilds Expansion for Horizon: Zero Dawn, featuring a new icy region, machines, and quests.",
                            Developer = "Guerrilla Games",
                            GameId = 24,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-2500K / AMD FX 6300, Memory: 8 GB RAM, Graphics: NVIDIA GTX 780 / AMD Radeon R9 290, Storage: 100 GB available space",
                            Price = 19.99m,
                            Publisher = "Sony Interactive Entertainment",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-4770K / AMD Ryzen 5 1500X, Memory: 16 GB RAM, Graphics: NVIDIA GTX 1060 / AMD RX 580, Storage: 100 GB available space",
                            ReleaseDate = new DateTime(2021, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 25,
                            AverageRating = 0.0,
                            DLCName = "Cyberpunk 2078 - Night City Stories",
                            Description = "Delve deeper into Night City with the Night City Stories DLC for Cyberpunk 2078, featuring new missions, characters, and cyber-enhancements.",
                            Developer = "CD Projekt Red",
                            GameId = 25,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5-4670K / AMD Ryzen 5 3600, Memory: 12 GB RAM, Graphics: NVIDIA GeForce GTX 1660 / AMD Radeon RX 5600 XT, Storage: 70 GB available space",
                            Price = 19.99m,
                            Publisher = "CD Projekt",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7-7700K / AMD Ryzen 7 3700X, Memory: 16 GB RAM, Graphics: NVIDIA GeForce RTX 3070 / AMD Radeon RX 6800 XT, Storage: 70 GB available space",
                            ReleaseDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 26,
                            AverageRating = 0.0,
                            DLCName = "The Legend of Zelda: Breath of the Wild 2 - Secrets of Hyrule",
                            Description = "Uncover the hidden secrets of Hyrule with new quests, dungeons, and mysteries in the Secrets of Hyrule DLC for Breath of the Wild 2.",
                            Developer = "Nintendo",
                            GameId = 26,
                            MinimumSystemRequirements = "OS: Nintendo Switch",
                            Price = 14.99m,
                            Publisher = "Nintendo",
                            RecommendedSystemRequirements = "OS: Nintendo Switch",
                            ReleaseDate = new DateTime(2023, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 27,
                            AverageRating = 0.0,
                            DLCName = "Stardew Valley - Farming Expansion Pack",
                            Description = "Expand your farm and experiences in Stardew Valley with the Farming Expansion Pack, introducing new crops, animals, and events.",
                            Developer = "ConcernedApe",
                            GameId = 27,
                            MinimumSystemRequirements = "OS: Windows Vista or greater, Processor: 2 GHz, Memory: 2 GB RAM, Graphics: 256 MB video memory, DirectX 10, Storage: 500 MB available space",
                            Price = 9.99m,
                            Publisher = "ConcernedApe",
                            RecommendedSystemRequirements = "OS: Windows 7 or greater, Processor: 2.8 GHz, Memory: 4 GB RAM, Graphics: 512 MB video memory, DirectX 10, Storage: 500 MB available space",
                            ReleaseDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 28,
                            AverageRating = 4.5,
                            DLCName = "Minecraft: Dungeons - Jungle Awakens",
                            Description = "Embark on a journey through the dense jungles of Minecraft with new adventures and challenges in the Jungle Awakens DLC.",
                            Developer = "Mojang Studios",
                            GameId = 28,
                            MinimumSystemRequirements = "OS: Windows 7 or higher, Processor: 2.8 GHz Core i3, Memory: 2 GB RAM, Graphics: Intel HD 4000, DirectX 11 compatible, Storage: 6 GB available space",
                            Price = 9.99m,
                            Publisher = "Mojang Studios",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: 3.3 GHz Core i5, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 660 / AMD Radeon HD 7850, DirectX 11 compatible, Storage: 6 GB available space",
                            ReleaseDate = new DateTime(2020, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 29,
                            AverageRating = 0.0,
                            DLCName = "Overwatch 2 - Heroes Unleashed",
                            Description = "Experience new heroes, maps, and intense battles in the Heroes Unleashed DLC for Overwatch 2.",
                            Developer = "Blizzard Entertainment",
                            GameId = 29,
                            MinimumSystemRequirements = "OS: Windows 10, Processor: Intel Core i5, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 960 / AMD Radeon R9 280X, Storage: 50 GB available space",
                            Price = 14.99m,
                            Publisher = "Blizzard Entertainment",
                            RecommendedSystemRequirements = "OS: Windows 10, Processor: Intel Core i7, Memory: 16 GB RAM, Graphics: NVIDIA GeForce GTX 1660 / AMD Radeon RX 5700, Storage: 50 GB available space",
                            ReleaseDate = new DateTime(2023, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        },
                        new
                        {
                            Id = 30,
                            AverageRating = 0.0,
                            DLCName = "Subnautica: Below Zero",
                            Description = "Continue your underwater adventures with Subnautica: Below Zero, featuring a new frozen environment and mysteries to uncover.",
                            Developer = "Unknown Worlds Entertainment",
                            GameId = 30,
                            MinimumSystemRequirements = "OS: Windows Vista SP2, Processor: Intel Haswell 2 cores / 4 threads @ 2.5 GHz, Memory: 4 GB RAM, Graphics: Intel HD 4600, DirectX 11 compatible, Storage: 20 GB available space",
                            Price = 19.99m,
                            Publisher = "Unknown Worlds Entertainment",
                            RecommendedSystemRequirements = "OS: Windows 7 SP1, Processor: Intel Haswell 4 cores / 4 threads @ 3.2 GHz, Memory: 8 GB RAM, Graphics: NVIDIA GeForce GTX 550 Ti / AMD Radeon HD 7850, DirectX 11 compatible, Storage: 20 GB available space",
                            ReleaseDate = new DateTime(2021, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TrailerUrl = "https://www.youtube.com/watch?v=exampledlctrailerurl"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.DLCImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DLCId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DLCId");

                    b.ToTable("DLCImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Caption = "The Witcher 3: Hearts of Stone DLC Image 1",
                            DLCId = 1,
                            ImageUrl = "https://static.wikia.nocookie.net/witcher/images/0/09/Tw3_expansion_pack_hos.jpg/revision/latest?cb=20150908190146"
                        },
                        new
                        {
                            Id = 2,
                            Caption = "The Witcher 3: Hearts of Stone DLC Image 2",
                            DLCId = 1,
                            ImageUrl = "https://example.com/path_to_second_image.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Caption = "The Witcher 3: Hearts of Stone DLC Image 3",
                            DLCId = 1,
                            ImageUrl = "https://example.com/path_to_third_image.jpg"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.GameGenre", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenres");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 1,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 2,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 4,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 4,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 4,
                            GenreId = 4
                        },
                        new
                        {
                            GameId = 4,
                            GenreId = 11
                        },
                        new
                        {
                            GameId = 5,
                            GenreId = 10
                        },
                        new
                        {
                            GameId = 5,
                            GenreId = 9
                        },
                        new
                        {
                            GameId = 6,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 6,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 7,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 7,
                            GenreId = 4
                        },
                        new
                        {
                            GameId = 8,
                            GenreId = 8
                        },
                        new
                        {
                            GameId = 8,
                            GenreId = 7
                        },
                        new
                        {
                            GameId = 9,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 9,
                            GenreId = 12
                        },
                        new
                        {
                            GameId = 10,
                            GenreId = 6
                        },
                        new
                        {
                            GameId = 10,
                            GenreId = 12
                        },
                        new
                        {
                            GameId = 11,
                            GenreId = 9
                        },
                        new
                        {
                            GameId = 11,
                            GenreId = 10
                        },
                        new
                        {
                            GameId = 12,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 12,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 13,
                            GenreId = 4
                        },
                        new
                        {
                            GameId = 13,
                            GenreId = 12
                        },
                        new
                        {
                            GameId = 14,
                            GenreId = 6
                        },
                        new
                        {
                            GameId = 14,
                            GenreId = 4
                        },
                        new
                        {
                            GameId = 15,
                            GenreId = 8
                        },
                        new
                        {
                            GameId = 15,
                            GenreId = 10
                        },
                        new
                        {
                            GameId = 16,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 16,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 17,
                            GenreId = 7
                        },
                        new
                        {
                            GameId = 18,
                            GenreId = 6
                        },
                        new
                        {
                            GameId = 18,
                            GenreId = 9
                        },
                        new
                        {
                            GameId = 19,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 19,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 20,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 20,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 21,
                            GenreId = 11
                        },
                        new
                        {
                            GameId = 22,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 22,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 23,
                            GenreId = 8
                        },
                        new
                        {
                            GameId = 23,
                            GenreId = 9
                        },
                        new
                        {
                            GameId = 24,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 24,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 25,
                            GenreId = 3
                        },
                        new
                        {
                            GameId = 25,
                            GenreId = 7
                        },
                        new
                        {
                            GameId = 26,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 26,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 27,
                            GenreId = 10
                        },
                        new
                        {
                            GameId = 28,
                            GenreId = 1
                        },
                        new
                        {
                            GameId = 28,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 29,
                            GenreId = 15
                        },
                        new
                        {
                            GameId = 30,
                            GenreId = 2
                        },
                        new
                        {
                            GameId = 30,
                            GenreId = 16
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.GamePlatform", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("PlatformId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "PlatformId");

                    b.HasIndex("PlatformId");

                    b.ToTable("GamePlatforms");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 1,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 1,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 2,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 2,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 2,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 3,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 4,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 4,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 4,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 4,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 5,
                            PlatformId = 5
                        },
                        new
                        {
                            GameId = 6,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 6,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 6,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 7,
                            PlatformId = 6
                        },
                        new
                        {
                            GameId = 8,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 8,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 8,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 9,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 9,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 9,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 10,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 10,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 10,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 11,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 11,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 11,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 11,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 12,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 12,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 12,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 13,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 13,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 13,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 14,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 14,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 14,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 15,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 15,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 15,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 15,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 16,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 16,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 16,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 17,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 17,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 18,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 18,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 18,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 19,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 19,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 19,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 20,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 20,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 20,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 21,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 22,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 22,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 22,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 23,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 23,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 23,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 24,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 25,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 25,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 25,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 26,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 27,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 27,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 27,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 28,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 28,
                            PlatformId = 4
                        },
                        new
                        {
                            GameId = 29,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 29,
                            PlatformId = 2
                        },
                        new
                        {
                            GameId = 29,
                            PlatformId = 3
                        },
                        new
                        {
                            GameId = 30,
                            PlatformId = 1
                        },
                        new
                        {
                            GameId = 30,
                            PlatformId = 4
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Platformer"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Fighting"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Educational"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Card & Board"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Stealth"
                        },
                        new
                        {
                            Id = 18,
                            Name = "MMORPG"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Battle Royale"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Sandbox"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DLCId")
                        .HasColumnType("int");

                    b.Property<int?>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DLCId");

                    b.HasIndex("GameId");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LanguageName = "English"
                        },
                        new
                        {
                            Id = 2,
                            LanguageName = "Spanish"
                        },
                        new
                        {
                            Id = 3,
                            LanguageName = "French"
                        },
                        new
                        {
                            Id = 4,
                            LanguageName = "German"
                        },
                        new
                        {
                            Id = 5,
                            LanguageName = "Japanese"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Platform");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "PC"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Xbox One"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PS4"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nintendo Switch"
                        },
                        new
                        {
                            Id = 5,
                            Name = "PS5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Xbox X"
                        });
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.WishList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("WishlistId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("WishlistId");

                    b.ToTable("WishlistItems");
                });

            modelBuilder.Entity("backend.Models.Payments.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("backend.Models.Product.GameGameTag", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GameTagId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "GameTagId");

                    b.HasIndex("GameTagId");

                    b.ToTable("GameGameTags");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 1,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 1,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 2,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 2,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 2,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 3,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 3,
                            GameTagId = 5
                        },
                        new
                        {
                            GameId = 3,
                            GameTagId = 6
                        },
                        new
                        {
                            GameId = 4,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 4,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 4,
                            GameTagId = 13
                        },
                        new
                        {
                            GameId = 5,
                            GameTagId = 10
                        },
                        new
                        {
                            GameId = 5,
                            GameTagId = 9
                        },
                        new
                        {
                            GameId = 6,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 6,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 7,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 7,
                            GameTagId = 4
                        },
                        new
                        {
                            GameId = 8,
                            GameTagId = 8
                        },
                        new
                        {
                            GameId = 8,
                            GameTagId = 7
                        },
                        new
                        {
                            GameId = 9,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 9,
                            GameTagId = 11
                        },
                        new
                        {
                            GameId = 10,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 10,
                            GameTagId = 5
                        },
                        new
                        {
                            GameId = 11,
                            GameTagId = 9
                        },
                        new
                        {
                            GameId = 11,
                            GameTagId = 11
                        },
                        new
                        {
                            GameId = 12,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 12,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 13,
                            GameTagId = 6
                        },
                        new
                        {
                            GameId = 13,
                            GameTagId = 12
                        },
                        new
                        {
                            GameId = 14,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 14,
                            GameTagId = 4
                        },
                        new
                        {
                            GameId = 15,
                            GameTagId = 8
                        },
                        new
                        {
                            GameId = 15,
                            GameTagId = 10
                        },
                        new
                        {
                            GameId = 16,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 16,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 17,
                            GameTagId = 4
                        },
                        new
                        {
                            GameId = 18,
                            GameTagId = 5
                        },
                        new
                        {
                            GameId = 18,
                            GameTagId = 12
                        },
                        new
                        {
                            GameId = 19,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 19,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 20,
                            GameTagId = 7
                        },
                        new
                        {
                            GameId = 20,
                            GameTagId = 6
                        },
                        new
                        {
                            GameId = 21,
                            GameTagId = 11
                        },
                        new
                        {
                            GameId = 22,
                            GameTagId = 15
                        },
                        new
                        {
                            GameId = 22,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 23,
                            GameTagId = 9
                        },
                        new
                        {
                            GameId = 24,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 24,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 25,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 25,
                            GameTagId = 5
                        },
                        new
                        {
                            GameId = 25,
                            GameTagId = 7
                        },
                        new
                        {
                            GameId = 26,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 26,
                            GameTagId = 4
                        },
                        new
                        {
                            GameId = 26,
                            GameTagId = 7
                        },
                        new
                        {
                            GameId = 27,
                            GameTagId = 10
                        },
                        new
                        {
                            GameId = 27,
                            GameTagId = 13
                        },
                        new
                        {
                            GameId = 28,
                            GameTagId = 1
                        },
                        new
                        {
                            GameId = 28,
                            GameTagId = 3
                        },
                        new
                        {
                            GameId = 29,
                            GameTagId = 15
                        },
                        new
                        {
                            GameId = 29,
                            GameTagId = 2
                        },
                        new
                        {
                            GameId = 30,
                            GameTagId = 16
                        });
                });

            modelBuilder.Entity("backend.Models.Product.GameLanguage", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.HasKey("GameId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GameLanguages");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 1,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 1,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 1,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 1,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 2,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 2,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 2,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 2,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 2,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 3,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 3,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 3,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 3,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 3,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 4,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 4,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 4,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 4,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 4,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 5,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 5,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 5,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 5,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 5,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 6,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 6,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 6,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 6,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 6,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 7,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 7,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 7,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 7,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 7,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 8,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 8,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 8,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 8,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 8,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 9,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 9,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 9,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 9,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 9,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 10,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 10,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 10,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 10,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 10,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 11,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 11,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 11,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 11,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 11,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 12,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 12,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 12,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 12,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 12,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 13,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 13,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 13,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 13,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 13,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 14,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 14,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 14,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 14,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 14,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 15,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 15,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 15,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 15,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 15,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 16,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 16,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 16,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 16,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 16,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 17,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 17,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 17,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 17,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 17,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 18,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 18,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 18,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 18,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 18,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 19,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 19,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 19,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 19,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 19,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 20,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 20,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 20,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 20,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 20,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 21,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 21,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 21,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 21,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 21,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 22,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 22,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 22,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 22,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 22,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 23,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 23,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 23,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 23,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 23,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 24,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 24,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 24,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 24,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 24,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 25,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 25,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 25,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 25,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 25,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 26,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 26,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 26,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 26,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 26,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 27,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 27,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 27,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 27,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 27,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 28,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 28,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 28,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 28,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 28,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 29,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 29,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 29,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 29,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 29,
                            LanguageId = 5
                        },
                        new
                        {
                            GameId = 30,
                            LanguageId = 1
                        },
                        new
                        {
                            GameId = 30,
                            LanguageId = 2
                        },
                        new
                        {
                            GameId = 30,
                            LanguageId = 3
                        },
                        new
                        {
                            GameId = 30,
                            LanguageId = 4
                        },
                        new
                        {
                            GameId = 30,
                            LanguageId = 5
                        });
                });

            modelBuilder.Entity("backend.Models.Product.GameTag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            TagName = "Open World"
                        },
                        new
                        {
                            TagId = 2,
                            TagName = "Multiplayer"
                        },
                        new
                        {
                            TagId = 3,
                            TagName = "Single Player"
                        },
                        new
                        {
                            TagId = 4,
                            TagName = "Fantasy"
                        },
                        new
                        {
                            TagId = 5,
                            TagName = "Sci-Fi"
                        },
                        new
                        {
                            TagId = 6,
                            TagName = "Horror"
                        },
                        new
                        {
                            TagId = 7,
                            TagName = "Action-Adventure"
                        },
                        new
                        {
                            TagId = 8,
                            TagName = "Racing"
                        },
                        new
                        {
                            TagId = 9,
                            TagName = "Sports"
                        },
                        new
                        {
                            TagId = 10,
                            TagName = "Simulation"
                        },
                        new
                        {
                            TagId = 11,
                            TagName = "Strategy"
                        },
                        new
                        {
                            TagId = 12,
                            TagName = "Role-Playing"
                        },
                        new
                        {
                            TagId = 13,
                            TagName = "Puzzle"
                        },
                        new
                        {
                            TagId = 14,
                            TagName = "Platformer"
                        },
                        new
                        {
                            TagId = 15,
                            TagName = "Shooter"
                        },
                        new
                        {
                            TagId = 16,
                            TagName = "Survival"
                        });
                });

            modelBuilder.Entity("backend.Models.User.UserFriend", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FriendId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "FriendId");

                    b.HasIndex("FriendId");

                    b.ToTable("UserFriends");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Game", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Product.AgeRating", "AgeRating")
                        .WithMany("Games")
                        .HasForeignKey("AgeRatingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", null)
                        .WithMany("GameLibrary")
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("AgeRating");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.GameImage", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("GameImages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Order", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Orders")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("backend.Models.Payments.Billing", "Billing")
                        .WithMany("Orders")
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Billing");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.OrderItem", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("OrderItems")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payment", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.PaymentMethod", b =>
                {
                    b.HasOne("backend.Models.Payments.Billing", "Billing")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Billing");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payments.Cart", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "User")
                        .WithOne("Cart")
                        .HasForeignKey("VideoGameAppBackend.Models.Payments.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payments.CartItem", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Payments.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.DLC", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("DLCs")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Product.DLCImage", "MainDLCImage")
                        .WithMany()
                        .HasForeignKey("MainDLCImageId");

                    b.Navigation("Game");

                    b.Navigation("MainDLCImage");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.DLCImage", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Product.DLC", "DLC")
                        .WithMany("DLCGallery")
                        .HasForeignKey("DLCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DLC");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.GameGenre", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Product.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.GamePlatform", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Product.Platform", "Platform")
                        .WithMany("GamePlatforms")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Language", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Product.DLC", null)
                        .WithMany("SupportedLanguages")
                        .HasForeignKey("DLCId");

                    b.HasOne("VideoGameAppBackend.Models.Game", null)
                        .WithMany("SupportedLanguages")
                        .HasForeignKey("GameId");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Review", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.WishList", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "User")
                        .WithMany("WishLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.WishlistItem", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Product.WishList", "Wishlist")
                        .WithMany("WishlistItems")
                        .HasForeignKey("WishlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Wishlist");
                });

            modelBuilder.Entity("backend.Models.Payments.Billing", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "User")
                        .WithOne("DefaultBillingDetails")
                        .HasForeignKey("backend.Models.Payments.Billing", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Models.Product.GameGameTag", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("GameGameTags")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Product.GameTag", "GameTag")
                        .WithMany("GameGameTags")
                        .HasForeignKey("GameTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("GameTag");
                });

            modelBuilder.Entity("backend.Models.Product.GameLanguage", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.Game", "Game")
                        .WithMany("GameLanguages")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.Product.Language", "Language")
                        .WithMany("GameLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("backend.Models.User.UserFriend", b =>
                {
                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VideoGameAppBackend.Models.ApplicationUser", "User")
                        .WithMany("UserFriends")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.ApplicationUser", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("DefaultBillingDetails");

                    b.Navigation("GameLibrary");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("UserFriends");

                    b.Navigation("WishLists");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Game", b =>
                {
                    b.Navigation("DLCs");

                    b.Navigation("GameGameTags");

                    b.Navigation("GameGenres");

                    b.Navigation("GameImages");

                    b.Navigation("GameLanguages");

                    b.Navigation("GamePlatforms");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");

                    b.Navigation("SupportedLanguages");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Payments.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.AgeRating", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.DLC", b =>
                {
                    b.Navigation("DLCGallery");

                    b.Navigation("SupportedLanguages");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Language", b =>
                {
                    b.Navigation("GameLanguages");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.Platform", b =>
                {
                    b.Navigation("GamePlatforms");
                });

            modelBuilder.Entity("VideoGameAppBackend.Models.Product.WishList", b =>
                {
                    b.Navigation("WishlistItems");
                });

            modelBuilder.Entity("backend.Models.Payments.Billing", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PaymentMethods");
                });

            modelBuilder.Entity("backend.Models.Product.GameTag", b =>
                {
                    b.Navigation("GameGameTags");
                });
#pragma warning restore 612, 618
        }
    }
}
